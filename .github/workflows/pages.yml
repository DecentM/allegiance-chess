name: pages

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  lint:
    name: lint

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
            packages/*/node_modules
            apps/*/node_modules
          key: lock-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            lock-

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20.5.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          set -exu
          yarn --frozen-lockfile --non-interactive

      - run: yarn nx run-many --target=lint
        env:
          NX_REJECT_UNKNOWN_LOCAL_CACHE: 0

  test:
    name: test

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache node_modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
            packages/*/node_modules
            apps/*/node_modules
          key: lock-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            lock-

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20.5.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          set -exu
          yarn --frozen-lockfile --non-interactive

      - run: yarn nx run-many --target=test
        env:
          NX_REJECT_UNKNOWN_LOCAL_CACHE: 0

  build:
    name: build

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            node_modules
            packages/*/node_modules
            apps/*/node_modules
          key: lock-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            lock-

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20.5.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: |
          set -exu
          yarn --frozen-lockfile --non-interactive

      - name: Build packages
        run: yarn nx run-many --target=build
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          NX_REJECT_UNKNOWN_LOCAL_CACHE: 0

      - name: Upload build result
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/*

  deploy:
    name: deploy

    needs:
      - lint
      - test
      - build

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    permissions:
      repository-projects: write
      pages: write
      contents: write

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: dist/apps/frontend
          cname: allegiance-chess.decentm.com

  sentry-release:
    name: sentry-release

    needs:
      - lint
      - test
      - build

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    permissions:
      repository-projects: write
      pages: write
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: allegiance-chess
          SENTRY_PROJECT: frontend
        with:
          environment: production
          sourcemaps: ./dist
          ignore_empty: true
          ignore_missing: true
