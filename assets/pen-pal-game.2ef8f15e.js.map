{"version":3,"file":"pen-pal-game.2ef8f15e.js","sources":["../../../../../src/pages/play/pen-pal-game.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { useRoute, useRouter } from 'vue-router'\nimport { Board, Notation } from '@decentm/allegiance-chess-core'\n\nimport ChessBoard from '../../components/chess-board.vue'\nimport GameSidebar from '../../components/game-sidebar.vue'\n\nimport { computed } from 'vue'\nimport { Hex } from '../../lib/hex'\nimport { FenPreset } from '../../lib/boards'\nimport { useQuasar } from 'quasar'\nimport { useBoardAudio } from '../../hooks/board-audio'\n\nconst route = useRoute()\nconst router = useRouter()\n\nconst afen = computed(() => {\n  const hex = Array.isArray(route.params.state)\n    ? route.params.state[0]\n    : route.params.state\n\n  if (!hex) {\n    return FenPreset.VanillaDefault\n  }\n\n  return Hex.hexToUtf8(hex)\n})\n\nconst moveHistory = computed(() => {\n  const hex = Array.isArray(route.params.history)\n    ? route.params.history[0]\n    : route.params.history\n\n  if (!hex) {\n    return ''\n  }\n\n  return Hex.hexToUtf8(hex)\n})\n\nconst board = computed(() => {\n  const b = new Board()\n\n  b.importAFEN(afen.value)\n  b.importMoveHistory(moveHistory.value)\n\n  return b\n})\n\nconst audio = useBoardAudio()\n\nconst handleExecuteNode = (node: Partial<Notation.Node>) => {\n  const index = board.value.findMoveIndex(node)\n\n  if (index === -1) {\n    return\n  }\n\n  board.value.executeMoveIndex(index)\n\n  audio?.playNode(node)\n\n  router.push({\n    path: `/play/pen-pal/${Hex.utf8ToHex(board.value.toAFEN())}/${Hex.utf8ToHex(\n      board.value.getMoveHistory()\n    )}`,\n  })\n}\n\nconst q = useQuasar()\n\nconst padding = 200\n\nconst size = computed(() => {\n  if (q.screen.gt.lg) {\n    return q.screen.sizes.lg - padding\n  }\n\n  if (q.screen.gt.md) {\n    return q.screen.sizes.md - padding\n  }\n\n  if (q.screen.gt.sm) {\n    return q.screen.sizes.sm - padding\n  }\n\n  return q.screen.width - padding - 150\n})\n</script>\n\n<template>\n  <q-card flat class=\"full-width\">\n    <q-card-section :horizontal=\"q.screen.gt.sm\">\n      <q-card-section :style=\"{ width: `${size}px` }\">\n        <chess-board\n          @execute-node=\"handleExecuteNode\"\n          :board=\"board\"\n          :perspective=\"board.activeColour\"\n          :play-as=\"['white', 'black']\"\n          :width=\"size\"\n        />\n      </q-card-section>\n\n      <q-card-section class=\"q-mb-md full-width\">\n        <game-sidebar\n          :move-history=\"board.getMoveHistoryAst()\"\n          :active-colour=\"board.activeColour\"\n          :own-colour=\"board.activeColour\"\n          :afen=\"board.toAFEN()\"\n        />\n      </q-card-section>\n    </q-card-section>\n  </q-card>\n</template>\n"],"names":["padding","route","useRoute","router","useRouter","afen","computed","hex","Hex","FenPreset","moveHistory","board","b","Board","audio","useBoardAudio","handleExecuteNode","node","index","q","useQuasar","size"],"mappings":"qiBAuEA,MAAMA,EAAU,wCA1DhB,MAAMC,EAAQC,IACRC,EAASC,IAETC,EAAOC,EAAS,IAAM,CAC1B,MAAMC,EAAM,MAAM,QAAQN,EAAM,OAAO,KAAK,EACxCA,EAAM,OAAO,MAAM,GACnBA,EAAM,OAAO,MAEjB,OAAKM,EAIEC,EAAI,UAAUD,CAAG,EAHfE,EAAU,cAGK,CACzB,EAEKC,EAAcJ,EAAS,IAAM,CACjC,MAAMC,EAAM,MAAM,QAAQN,EAAM,OAAO,OAAO,EAC1CA,EAAM,OAAO,QAAQ,GACrBA,EAAM,OAAO,QAEjB,OAAKM,EAIEC,EAAI,UAAUD,CAAG,EAHf,EAGe,CACzB,EAEKI,EAAQL,EAAS,IAAM,CACrB,MAAAM,EAAI,IAAIC,EAEZ,OAAAD,EAAA,WAAWP,EAAK,KAAK,EACrBO,EAAA,kBAAkBF,EAAY,KAAK,EAE9BE,CAAA,CACR,EAEKE,EAAQC,IAERC,EAAqBC,GAAiC,CAC1D,MAAMC,EAAQP,EAAM,MAAM,cAAcM,CAAI,EAExCC,IAAU,KAIRP,EAAA,MAAM,iBAAiBO,CAAK,EAElCJ,GAAA,MAAAA,EAAO,SAASG,GAEhBd,EAAO,KAAK,CACV,KAAM,iBAAiBK,EAAI,UAAUG,EAAM,MAAM,OAAQ,CAAA,KAAKH,EAAI,UAChEG,EAAM,MAAM,eAAe,CAAA,GAC7B,CACD,EAAA,EAGGQ,EAAIC,IAIJC,EAAOf,EAAS,IAChBa,EAAE,OAAO,GAAG,GACPA,EAAE,OAAO,MAAM,GAAKnB,EAGzBmB,EAAE,OAAO,GAAG,GACPA,EAAE,OAAO,MAAM,GAAKnB,EAGzBmB,EAAE,OAAO,GAAG,GACPA,EAAE,OAAO,MAAM,GAAKnB,EAGtBmB,EAAE,OAAO,MAAQnB,EAAU,GACnC"}