{"version":3,"file":"online-game.8e74d425.js","sources":["../../../../../src/pages/play/online-game.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, onBeforeUnmount } from 'vue'\nimport { Board } from '@decentm/allegiance-chess-core'\nimport { useQuasar } from 'quasar'\n\nimport ChessBoard from '../../components/chess-board.vue'\nimport GameSidebar from '../../components/game-sidebar.vue'\nimport GameOverDialog from '../../components/game-over-dialog.vue'\n\nimport { ChessRtcConnection } from '../../hooks/chess-rtc-connection'\nimport { useBoardSize } from '../../hooks/board-size'\n\nconst props = defineProps<{\n  connection: ChessRtcConnection\n}>()\n\nonBeforeUnmount(() => {\n  props.connection.disconnect()\n})\n\nconst board = computed(() => {\n  const result = new Board()\n\n  result.importAFEN(props.connection.boardAFEN.value)\n  result.importMoveHistory(props.connection.moveHistory.value)\n\n  return result\n})\n\nconst handleExecuteNodeIndex = (index: number) => {\n  props.connection.sendMessage({\n    type: 'execute-node-index',\n    value: index,\n  })\n}\n\nconst q = useQuasar()\nconst size = useBoardSize()\n\nconst perspective = computed(() => {\n  if (!props.connection.serverSide.value) {\n    return null\n  }\n\n  if (props.connection.mode.value === 'server') {\n    return props.connection.serverSide.value\n  }\n\n  return props.connection.serverSide.value === 'white' ? 'black' : 'white'\n})\n</script>\n\n<template>\n  <q-card flat class=\"full-width\">\n    <q-card-section\n      :horizontal=\"q.screen.gt.sm\"\n      :class=\"{ 'q-px-none': q.screen.lt.sm }\"\n    >\n      <q-card-section\n        :style=\"{ width: `${size}px` }\"\n        :class=\"{ 'q-px-none': q.screen.lt.sm }\"\n      >\n        <chess-board\n          :model-value=\"connection.boardAFEN.value\"\n          :width=\"size\"\n          @execute-node-index=\"handleExecuteNodeIndex\"\n          :board=\"board\"\n          :perspective=\"perspective ?? 'white'\"\n          :play-as=\"['white', 'black']\"\n          :rounded-borders=\"q.screen.gt.xs\"\n        />\n      </q-card-section>\n\n      <q-card-section class=\"q-mb-md full-width\">\n        <game-sidebar\n          :move-history=\"board.getMoveHistoryAst()\"\n          :active-colour=\"board.activeColour\"\n          :own-colour=\"perspective ?? 'white'\"\n          :afen=\"connection.boardAFEN.value\"\n        />\n      </q-card-section>\n    </q-card-section>\n\n    <game-over-dialog\n      v-if=\"connection.gameOver.value\"\n      :node=\"connection.gameOver.value\"\n    />\n  </q-card>\n</template>\n"],"names":["onBeforeUnmount","props","board","computed","result","Board","handleExecuteNodeIndex","index","q","useQuasar","size","useBoardSize","perspective"],"mappings":"qiBAgBAA,EAAgB,IAAM,CACpBC,EAAM,WAAW,YAAW,CAC7B,EAEK,MAAAC,EAAQC,EAAS,IAAM,CACrB,MAAAC,EAAS,IAAIC,EAEnB,OAAAD,EAAO,WAAWH,EAAM,WAAW,UAAU,KAAK,EAClDG,EAAO,kBAAkBH,EAAM,WAAW,YAAY,KAAK,EAEpDG,CAAA,CACR,EAEKE,EAA0BC,GAAkB,CAChDN,EAAM,WAAW,YAAY,CAC3B,KAAM,qBACN,MAAOM,CAAA,CACR,CAAA,EAGGC,EAAIC,IACJC,EAAOC,IAEPC,EAAcT,EAAS,IACtBF,EAAM,WAAW,WAAW,MAI7BA,EAAM,WAAW,KAAK,QAAU,SAC3BA,EAAM,WAAW,WAAW,MAG9BA,EAAM,WAAW,WAAW,QAAU,QAAU,QAAU,QAPxD,IAQV"}