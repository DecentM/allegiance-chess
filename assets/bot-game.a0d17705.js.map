{"version":3,"file":"bot-game.a0d17705.js","sources":["../../../../../src/pages/play/bot-game.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { useQuasar } from 'quasar'\nimport { computed, onMounted, ref } from 'vue'\n\nimport GameLayout from '../../components/game-layout.vue'\n\nimport ChessBoard from '../../components/chess-board.vue'\nimport GameSidebar from '../../components/game-sidebar.vue'\nimport GameOverDialog from '../../components/game-over-dialog.vue'\n\nimport { useBoardWorker } from '../../hooks/board-worker'\n\nconst perspective = ref<'white' | 'black'>('white')\n\nconst autoplayFor = computed<Array<'white' | 'black'>>(() => {\n  return [perspective.value === 'white' ? 'black' : 'white']\n})\n\nconst board = useBoardWorker({\n  autoplayFor,\n})\n\nonMounted(() => board.reset())\n\nconst q = useQuasar()\n</script>\n\n<template>\n  <game-layout>\n    <template #board>\n      <chess-board\n        @execute-node-index=\"board.executeMoveIndex\"\n        :active-colour=\"board.activeColour.value\"\n        :check-moves=\"board.checkMoves.value\"\n        :en-passant-target=\"board.enPassantTarget.value\"\n        :move-history-ast=\"board.moveHistoryAst.value\"\n        :squares=\"board.squares.value\"\n        :perspective=\"'white'\"\n        :play-as=\"['white', 'black']\"\n        :rounded-borders=\"q.screen.gt.xs\"\n        :valid-moves=\"board.validMoves.value\"\n        :loading=\"board.loading.value\"\n      />\n    </template>\n\n    <template #sidebar>\n      <game-sidebar\n        :move-history=\"board.moveHistoryAst.value\"\n        :active-colour=\"board.activeColour.value\"\n        :own-colour=\"'white'\"\n        :afen=\"board.afen.value\"\n        :game-over=\"board.gameOver.value\"\n      >\n        <q-item>\n          <q-item-section class=\"q-mt-sm q-mb-sm\">\n            <q-item-label>Opening</q-item-label>\n            <q-item-label caption lines=\"2\">\n              {{ board.opening.value || 'unknown' }}\n            </q-item-label>\n          </q-item-section>\n\n          <q-item-section side>\n            <q-icon name=\"book\" />\n          </q-item-section>\n        </q-item>\n\n        <q-separator />\n\n        <q-item>\n          <q-item-section class=\"q-mt-sm q-mb-sm\">\n            <q-item-label>Board value</q-item-label>\n            <q-item-label caption lines=\"2\">\n              {{ board.boardScore.value.toPrecision(3) }}\n            </q-item-label>\n          </q-item-section>\n\n          <q-item-section side>\n            <q-icon name=\"exposure_plus_1\" />\n          </q-item-section>\n        </q-item>\n      </game-sidebar>\n    </template>\n\n    <template #default>\n      <game-over-dialog\n        v-if=\"board.gameOver.value\"\n        :node=\"board.gameOver.value\"\n      />\n    </template>\n  </game-layout>\n</template>\n"],"names":["perspective","ref","autoplayFor","computed","board","useBoardWorker","onMounted","q","useQuasar"],"mappings":"omBAYM,MAAAA,EAAcC,EAAuB,OAAO,EAE5CC,EAAcC,EAAmC,IAC9C,CAACH,EAAY,QAAU,QAAU,QAAU,OAAO,CAC1D,EAEKI,EAAQC,EAAe,CAC3B,YAAAH,CAAA,CACD,EAESI,EAAA,IAAMF,EAAM,MAAA,CAAO,EAE7B,MAAMG,EAAIC"}