{"version":3,"file":"setup-game.f56c980a.js","sources":["../../../../../src/pages/play/setup-game.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, onMounted, ref } from 'vue'\nimport { ChessRtcConnection } from '../../hooks/chess-rtc-connection'\nimport { useQuasar } from 'quasar'\nimport { Hex } from '../../lib/hex'\n\nconst props = defineProps<{\n  connection: ChessRtcConnection\n}>()\n\nconst connectId = ref('')\n\nconst validatePeerId = (input: string): string | boolean => {\n  if (!input) {\n    return 'You must specify a Peer ID to connect with'\n  }\n\n  const uuid = Hex.hexToUtf8(input)\n  const [part1, part2, part3, part4, part5, ...rest] = uuid.split('-')\n\n  if (rest.length !== 0) {\n    return 'Peer ID invalid, too much data'\n  }\n\n  if (part1.length !== 8) {\n    return 'Peer ID invalid, part 1 has invalid length'\n  }\n\n  if (part2.length !== 4) {\n    return 'Peer ID invalid, part 2 has invalid length'\n  }\n\n  if (part3.length !== 4) {\n    return 'Peer ID invalid, part 3 has invalid length'\n  }\n\n  if (part4.length !== 4) {\n    return 'Peer ID invalid, part 4 has invalid length'\n  }\n\n  if (part5.length !== 12) {\n    return 'Peer ID invalid, part 5 has invalid length'\n  }\n\n  if (input === props.connection.peerId.value) {\n    return 'This is your own Peer ID'\n  }\n\n  return true\n}\n\nconst handleSubmit = () => [props.connection.connect(connectId.value)]\n\nconst submittable = computed(() => {\n  const result = validatePeerId(connectId.value)\n\n  return result === true\n})\n\nconst q = useQuasar()\n\nconst handleCopy = () => {\n  try {\n    if (!props.connection.peerId.value) {\n      throw new Error('Peer ID missing')\n    }\n\n    navigator.clipboard.writeText(props.connection.peerId.value)\n\n    q.notify({\n      icon: 'content_copy',\n      message: 'Peer ID copied to clipboard',\n      timeout: 4000,\n      position: 'bottom-right',\n    })\n  } catch (error) {\n    if (error instanceof Error) {\n      q.notify({\n        icon: 'close',\n        iconColor: 'red',\n        message: 'Cannot copy to clipboard',\n        caption: error.message,\n        timeout: 4000,\n        position: 'bottom-right',\n      })\n    }\n  }\n}\n\nonMounted(() => {\n  props.connection.disconnect()\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.divider-right {\n  border-right-color: $grey;\n  border-right-width: 1px;\n  border-right-style: solid;\n\n  min-height: 18rem;\n  margin-left: -1px;\n}\n</style>\n\n<template>\n  <q-card flat>\n    <q-card-section vertical>\n      <div class=\"row items-center full-height space\">\n        <div class=\"col-md-6 col-sm-12 text-center q-pa-md\">\n          <q-card flat>\n            <q-card-section>\n              <h4 class=\"text-h4\">Pen-pal mode</h4>\n\n              <q-separator class=\"q-mb-md\" />\n\n              <span>\n                The game will run locally, but you can send the page URL to your\n                opponent to let them make a move\n              </span>\n\n              <q-separator class=\"q-mb-md q-mt-md\" />\n\n              <div class=\"row justify-end\">\n                <q-btn\n                  to=\"/play/pen-pal\"\n                  icon=\"mail\"\n                  label=\"New game\"\n                  color=\"primary\"\n                />\n              </div>\n            </q-card-section>\n          </q-card>\n        </div>\n\n        <div class=\"col-md-6 col-sm-12 text-center q-pa-md\">\n          <q-card flat>\n            <q-card-section>\n              <h4 class=\"text-h4\">Play against a bot</h4>\n\n              <q-separator class=\"q-mb-md\" />\n\n              <span>\n                The game will run locally, with a (bad) bot as your opponent\n              </span>\n\n              <q-separator class=\"q-mb-md q-mt-md\" />\n\n              <div class=\"row justify-end\">\n                <q-btn\n                  to=\"/play/bot\"\n                  icon=\"precision_manufacturing\"\n                  label=\"New game\"\n                  color=\"primary\"\n                />\n              </div>\n            </q-card-section>\n          </q-card>\n        </div>\n      </div>\n\n      <div class=\"row items-center full-height space\">\n        <div class=\"col-md-6 col-sm-12 text-center q-pa-md\">\n          <q-card flat>\n            <q-card-section>\n              <q-form @submit=\"handleSubmit\">\n                <h4 class=\"text-h4\">Join a game</h4>\n\n                <q-separator class=\"q-mb-md\" />\n\n                <span>\n                  Ask your opponent to visit this page, and send you their Peer\n                  ID. Paste your opponent's Peer ID in this field, and click\n                  \"Connect\" or press enter to begin the game\n                </span>\n\n                <q-separator class=\"q-mb-md q-mt-md\" />\n\n                <q-input\n                  filled\n                  color=\"secondary\"\n                  v-model=\"connectId\"\n                  label=\"Peer ID *\"\n                  hint=\"Paste your opponent's Peer ID here\"\n                  lazy-rules\n                  :rules=\"[validatePeerId]\"\n                />\n\n                <div class=\"row justify-end\">\n                  <q-btn\n                    icon=\"hub\"\n                    label=\"Connect\"\n                    type=\"submit\"\n                    color=\"primary\"\n                    :disable=\"!submittable\"\n                  />\n                </div>\n              </q-form>\n            </q-card-section>\n          </q-card>\n        </div>\n\n        <q-card flat class=\"col-md-6 col-sm-12 text-center q-pa-md\">\n          <q-card-section>\n            <h4 class=\"text-h4\">Host a game</h4>\n\n            <q-separator class=\"q-mb-md\" />\n\n            <span>\n              Send your opponent your Peer ID. Ask your opponent to visit this\n              page and paste your Peer ID into the field on the left on their\n              side\n            </span>\n\n            <q-separator class=\"q-mb-md q-mt-md\" />\n\n            <q-input\n              filled\n              color=\"secondary\"\n              :model-value=\"connection.peerId.value\"\n              label=\"Peer ID *\"\n              hint=\"Copy this Peer ID and send it to your opponent\"\n              readonly\n              :loading=\"!connection.peerId.value\"\n            />\n\n            <div class=\"row justify-end\">\n              <q-btn\n                label=\"Copy\"\n                color=\"primary\"\n                icon=\"content_copy\"\n                @click=\"handleCopy\"\n              />\n            </div>\n          </q-card-section>\n        </q-card>\n      </div>\n    </q-card-section>\n  </q-card>\n</template>\n"],"names":["connectId","ref","validatePeerId","input","uuid","Hex","part1","part2","part3","part4","part5","rest","props","handleSubmit","submittable","computed","q","useQuasar","handleCopy","error","onMounted"],"mappings":"yqDAUMA,EAAYC,EAAI,EAAE,EAElBC,EAAkBC,GAAoC,CAC1D,GAAI,CAACA,EACI,MAAA,6CAGH,MAAAC,EAAOC,EAAI,UAAUF,CAAK,EAC1B,CAACG,EAAOC,EAAOC,EAAOC,EAAOC,KAAUC,CAAI,EAAIP,EAAK,MAAM,GAAG,EAE/D,OAAAO,EAAK,SAAW,EACX,iCAGLL,EAAM,SAAW,EACZ,6CAGLC,EAAM,SAAW,EACZ,6CAGLC,EAAM,SAAW,EACZ,6CAGLC,EAAM,SAAW,EACZ,6CAGLC,EAAM,SAAW,GACZ,6CAGLP,IAAUS,EAAM,WAAW,OAAO,MAC7B,2BAGF,EAAA,EAGHC,EAAe,IAAM,CAACD,EAAM,WAAW,QAAQZ,EAAU,KAAK,CAAC,EAE/Dc,EAAcC,EAAS,IACZb,EAAeF,EAAU,KAAK,IAE3B,EACnB,EAEKgB,EAAIC,IAEJC,EAAa,IAAM,CACnB,GAAA,CACF,GAAI,CAACN,EAAM,WAAW,OAAO,MACrB,MAAA,IAAI,MAAM,iBAAiB,EAGnC,UAAU,UAAU,UAAUA,EAAM,WAAW,OAAO,KAAK,EAE3DI,EAAE,OAAO,CACP,KAAM,eACN,QAAS,8BACT,QAAS,IACT,SAAU,cAAA,CACX,QACMG,GACHA,aAAiB,OACnBH,EAAE,OAAO,CACP,KAAM,QACN,UAAW,MACX,QAAS,2BACT,QAASG,EAAM,QACf,QAAS,IACT,SAAU,cAAA,CACX,CAEL,CAAA,EAGF,OAAAC,EAAU,IAAM,CACdR,EAAM,WAAW,YAAW,CAC7B"}