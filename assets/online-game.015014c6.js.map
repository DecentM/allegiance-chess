{"version":3,"file":"online-game.015014c6.js","sources":["../../../../../src/pages/play/online-game.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { computed, onBeforeUnmount } from 'vue'\nimport { Board, Notation } from '@decentm/allegiance-chess-core'\nimport { useQuasar } from 'quasar'\n\nimport ChessBoard from '../../components/chess-board.vue'\nimport GameSidebar from '../../components/game-sidebar.vue'\n\nimport { ChessRtcConnection } from '../../hooks/chess-rtc-connection'\n\nconst props = defineProps<{\n  connection: ChessRtcConnection\n}>()\n\nonBeforeUnmount(() => {\n  props.connection.disconnect()\n})\n\nconst board = computed(() => {\n  const result = new Board()\n\n  result.importAFEN(props.connection.boardAFEN.value)\n  result.importMoveHistory(props.connection.moveHistory.value)\n\n  return result\n})\n\nconst handleExecuteNode = (node: Partial<Notation.Node>) => {\n  const index = board.value.findMoveIndex(node)\n\n  if (index === -1) {\n    return\n  }\n\n  props.connection.sendMessage({\n    type: 'execute-node-index',\n    value: index,\n  })\n}\n\nconst q = useQuasar()\n\nconst padding = 200\n\nconst size = computed(() => {\n  let result = q.screen.width\n\n  if (q.screen.gt.sm) {\n    result = q.screen.sizes.sm\n  }\n\n  if (q.screen.gt.md) {\n    result = q.screen.sizes.md - padding\n  }\n\n  if (q.screen.gt.lg) {\n    result = q.screen.sizes.lg - padding\n  }\n\n  return Math.min(result - 75, q.screen.height - 75)\n})\n\nconst perspective = computed(() => {\n  if (!props.connection.serverSide.value) {\n    return null\n  }\n\n  if (props.connection.mode.value === 'server') {\n    return props.connection.serverSide.value\n  }\n\n  return props.connection.serverSide.value === 'white' ? 'black' : 'white'\n})\n</script>\n\n<template>\n  <q-card flat class=\"full-width\">\n    <q-card-section :horizontal=\"q.screen.gt.sm\">\n      <q-card-section :style=\"{ width: `${size}px` }\">\n        <chess-board\n          :model-value=\"connection.boardAFEN.value\"\n          :width=\"size\"\n          @execute-node=\"handleExecuteNode\"\n          :board=\"board\"\n          :perspective=\"perspective ?? 'white'\"\n          :play-as=\"['white', 'black']\"\n        />\n      </q-card-section>\n\n      <q-card-section class=\"q-mb-md full-width\">\n        <game-sidebar\n          :move-history=\"board.getMoveHistoryAst()\"\n          :active-colour=\"board.activeColour\"\n          :own-colour=\"perspective ?? 'white'\"\n          :afen=\"connection.boardAFEN.value\"\n        />\n      </q-card-section>\n    </q-card-section>\n  </q-card>\n</template>\n"],"names":["padding","onBeforeUnmount","props","board","computed","result","Board","handleExecuteNode","node","index","q","useQuasar","size","perspective"],"mappings":"kcA0CA,MAAMA,EAAU,uEA5BhBC,EAAgB,IAAM,CACpBC,EAAM,WAAW,YAAW,CAC7B,EAEK,MAAAC,EAAQC,EAAS,IAAM,CACrB,MAAAC,EAAS,IAAIC,EAEnB,OAAAD,EAAO,WAAWH,EAAM,WAAW,UAAU,KAAK,EAClDG,EAAO,kBAAkBH,EAAM,WAAW,YAAY,KAAK,EAEpDG,CAAA,CACR,EAEKE,EAAqBC,GAAiC,CAC1D,MAAMC,EAAQN,EAAM,MAAM,cAAcK,CAAI,EAExCC,IAAU,IAIdP,EAAM,WAAW,YAAY,CAC3B,KAAM,qBACN,MAAOO,CAAA,CACR,CAAA,EAGGC,EAAIC,IAIJC,EAAOR,EAAS,IAAM,CACtB,IAAAC,EAASK,EAAE,OAAO,MAElB,OAAAA,EAAE,OAAO,GAAG,KACLL,EAAAK,EAAE,OAAO,MAAM,IAGtBA,EAAE,OAAO,GAAG,KACLL,EAAAK,EAAE,OAAO,MAAM,GAAKV,GAG3BU,EAAE,OAAO,GAAG,KACLL,EAAAK,EAAE,OAAO,MAAM,GAAKV,GAGxB,KAAK,IAAIK,EAAS,GAAIK,EAAE,OAAO,OAAS,EAAE,CAAA,CAClD,EAEKG,EAAcT,EAAS,IACtBF,EAAM,WAAW,WAAW,MAI7BA,EAAM,WAAW,KAAK,QAAU,SAC3BA,EAAM,WAAW,WAAW,MAG9BA,EAAM,WAAW,WAAW,QAAU,QAAU,QAAU,QAPxD,IAQV"}