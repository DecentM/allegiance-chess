{"version":3,"file":"sdk.1b5d8cab.js","sources":["../../../../../../../node_modules/@sentry/utils/esm/aggregate-errors.js","../../../../../../../node_modules/@sentry/utils/esm/dsn.js","../../../../../../../node_modules/@sentry/utils/esm/error.js","../../../../../../../node_modules/@sentry/utils/esm/stacktrace.js","../../../../../../../node_modules/@sentry/utils/esm/supports.js","../../../../../../../node_modules/@sentry/utils/esm/vendor/supportsHistory.js","../../../../../../../node_modules/@sentry/utils/esm/instrument.js","../../../../../../../node_modules/@sentry/utils/esm/memo.js","../../../../../../../node_modules/@sentry/utils/esm/normalize.js","../../../../../../../node_modules/@sentry/utils/esm/promisebuffer.js","../../../../../../../node_modules/@sentry/utils/esm/url.js","../../../../../../../node_modules/@sentry/utils/esm/severity.js","../../../../../../../node_modules/@sentry/utils/esm/envelope.js","../../../../../../../node_modules/@sentry/utils/esm/clientreport.js","../../../../../../../node_modules/@sentry/utils/esm/ratelimit.js","../../../../../../../node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js","../../../../../../../node_modules/@sentry/core/esm/api.js","../../../../../../../node_modules/@sentry/core/esm/envelope.js","../../../../../../../node_modules/@sentry/core/esm/integration.js","../../../../../../../node_modules/@sentry/core/esm/utils/prepareEvent.js","../../../../../../../node_modules/@sentry/core/esm/baseclient.js","../../../../../../../node_modules/@sentry/core/esm/sdk.js","../../../../../../../node_modules/@sentry/core/esm/transports/base.js","../../../../../../../node_modules/@sentry/core/esm/version.js","../../../../../../../node_modules/@sentry/core/esm/integrations/functiontostring.js","../../../../../../../node_modules/@sentry/core/esm/integrations/inboundfilters.js","../../../../../../../node_modules/@sentry/browser/esm/helpers.js","../../../../../../../node_modules/@sentry/browser/esm/eventbuilder.js","../../../../../../../node_modules/@sentry/browser/esm/userfeedback.js","../../../../../../../node_modules/@sentry/browser/esm/client.js","../../../../../../../node_modules/@sentry/browser/esm/transports/utils.js","../../../../../../../node_modules/@sentry/browser/esm/transports/fetch.js","../../../../../../../node_modules/@sentry/browser/esm/transports/xhr.js","../../../../../../../node_modules/@sentry/browser/esm/stack-parsers.js","../../../../../../../node_modules/@sentry/browser/esm/integrations/globalhandlers.js","../../../../../../../node_modules/@sentry/browser/esm/integrations/trycatch.js","../../../../../../../node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","../../../../../../../node_modules/@sentry/browser/esm/integrations/linkederrors.js","../../../../../../../node_modules/@sentry/browser/esm/integrations/httpcontext.js","../../../../../../../node_modules/@sentry/browser/esm/integrations/dedupe.js","../../../../../../../node_modules/@sentry/browser/esm/sdk.js"],"sourcesContent":["import { isInstanceOf } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nfunction applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation,\n  parser,\n  maxValueLimit = 250,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException ,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation,\n  parser,\n  limit,\n  error,\n  key,\n  prevExceptions,\n  exception,\n  exceptionId,\n) {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception, exceptionId) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    is_exception_group: true,\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception,\n  source,\n  exceptionId,\n  parentId,\n) {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions, maxValueLength) {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n\nexport { applyAggregateErrorsToEvent };\n//# sourceMappingURL=aggregate-errors.js.map\n","import { logger } from './logger.js';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    // eslint-disable-next-line no-console\n    console.error(`Invalid Sentry Dsn: ${str}`);\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!(typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n\nexport { dsnFromString, dsnToString, makeDsn };\n//# sourceMappingURL=dsn.js.map\n","/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor( message, logLevel = 'warn') {\n    super(message);this.message = message;\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\nexport { SentryError };\n//# sourceMappingURL=error.js.map\n","import { node } from './node-stack-trace.js';\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    const frames = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, node(getModule)];\n}\n\nexport { createStackParser, getFunctionName, nodeStackLineParser, stackParserFromStackParserOptions, stripSentryFramesAndReverse };\n//# sourceMappingURL=stacktrace.js.map\n","import { logger } from './logger.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport { isNativeFetch, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver };\n//# sourceMappingURL=supports.js.map\n","import { getGlobalObject } from '../worldwide.js';\n\n// Based on https://github.com/angular/angular.js/pull/13945/files\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (WINDOW ).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexport { supportsHistory };\n//# sourceMappingURL=supportsHistory.js.map\n","import { isString } from './is.js';\nimport { logger, CONSOLE_LEVELS, originalConsoleMethods } from './logger.js';\nimport { fill } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\nimport { supportsNativeFetch } from './supports.js';\nimport { getGlobalObject, GLOBAL_OBJ } from './worldwide.js';\nimport { supportsHistory } from './vendor/supportsHistory.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\nconst SENTRY_XHR_DATA_KEY = '__sentry_xhr_v2__';\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers = {};\nconst instrumented = {};\n\n/** Instruments given API */\nfunction instrument(type) {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addInstrumentationHandler(type, callback) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(callback);\n  instrument(type);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nfunction resetInstrumentationHandlers() {\n  Object.keys(handlers).forEach(key => {\n    handlers[key ] = undefined;\n  });\n}\n\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole() {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod) {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args) {\n        triggerHandlers('console', { args, level });\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch() {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch) {\n    return function (...args) {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        (response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp(obj, prop) {\n  return !!obj && typeof obj === 'object' && !!(obj )[prop];\n}\n\nfunction getUrlFromResource(resource) {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request\n */\nfunction parseFetchArgs(fetchArgs) {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs ;\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg ),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n\n/** JSDoc */\nfunction instrumentXHR() {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (!(WINDOW ).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n      const url = args[1];\n      const xhrInfo = (this[SENTRY_XHR_DATA_KEY] = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n        request_headers: {},\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args: args ,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr: this,\n          } );\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original) {\n          return function ( ...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original) {\n        return function ( ...setRequestHeaderArgs) {\n          const [header, value] = setRequestHeaderArgs ;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n      if (sentryXhrData && args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref;\n\n/** JSDoc */\nfunction instrumentHistory() {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function ( ...args) {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nconst debounceDuration = 1000;\nlet debounceTimerID;\nlet lastCapturedEvent;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous, current) {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event) {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target ;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler, globalListener = false) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\n/** JSDoc */\nfunction instrumentDOM() {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW )[target] && (WINDOW )[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n\n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this ;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n\n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this ;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n  _oldOnErrorHandler = WINDOW.onerror;\n\n  WINDOW.onerror = function (msg, url, line, column, error) {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  WINDOW.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n\nlet _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = WINDOW.onunhandledrejection;\n\n  WINDOW.onunhandledrejection = function (e) {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  WINDOW.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n\nexport { SENTRY_XHR_DATA_KEY, addInstrumentationHandler, instrumentDOM, instrumentXHR, parseFetchArgs, resetInstrumentationHandlers };\n//# sourceMappingURL=instrument.js.map\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\nexport { memoBuilder };\n//# sourceMappingURL=memo.js.map\n","import { isNaN, isVueViewModel, isSyntheticEvent } from './is.js';\nimport { memoBuilder } from './memo.js';\nimport { convertToPlainObject } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = 100, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = memoBuilder(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))\n  ) {\n    return value ;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value )['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value )['__sentry_override_normalization_depth__'] )\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value );\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value) {\n  const prototype = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\nexport { normalize, normalizeToSize, visit as walk };\n//# sourceMappingURL=normalize.js.map\n","import { SentryError } from './error.js';\nimport { rejectedSyncPromise, SyncPromise, resolvedSyncPromise } from './syncpromise.js';\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\nexport { makePromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map\n","/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nfunction getSanitizedUrlString(url) {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        .replace(':80', '')\n        .replace(':443', '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n\nexport { getNumberOfUrlSegments, getSanitizedUrlString, parseUrl, stripUrlQueryAndFragment };\n//# sourceMappingURL=url.js.map\n","// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\nexport { severityFromString, severityLevelFromString, validSeverityLevels };\n//# sourceMappingURL=severity.js.map\n","import { dsnToString } from './dsn.js';\nimport { normalize } from './normalize.js';\nimport { dropUndefinedKeys } from './object.js';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input, textEncoder) {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(\n  env,\n  textEncoder,\n  textDecoder,\n) {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n\nexport { addItemToEnvelope, createAttachmentEnvelopeItem, createEnvelope, createEventEnvelopeHeaders, envelopeContainsItemType, envelopeItemTypeToDataCategory, forEachEnvelopeItem, getSdkMetadataForEnvelopeHeader, parseEnvelope, serializeEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { createEnvelope } from './envelope.js';\nimport { dateTimestampInSeconds } from './time.js';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  const clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\nexport { createClientReportEnvelope };\n//# sourceMappingURL=clientreport.js.map\n","// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, category) {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, category, now = Date.now()) {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\nexport { DEFAULT_RETRY_AFTER, disabledUntil, isRateLimited, parseRetryAfterHeader, updateRateLimits };\n//# sourceMappingURL=ratelimit.js.map\n","import { dropUndefinedKeys } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from '../constants.js';\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatchs the `createDsc` lifecycle hook as a side effect.\n */\nfunction getDynamicSamplingContextFromClient(\n  trace_id,\n  client,\n  scope,\n) {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = dropUndefinedKeys({\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) ;\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\nexport { getDynamicSamplingContextFromClient };\n//# sourceMappingURL=dynamicSamplingContext.js.map\n","import { makeDsn, dsnToString, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions = {} ,\n) {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\nexport { getEnvelopeEndpointWithUrlEncodedAuth, getReportDialogEndpoint };\n//# sourceMappingURL=api.js.map\n","import { getSdkMetadataForEnvelopeHeader, dsnToString, createEnvelope, createEventEnvelopeHeaders } from '@sentry/utils';\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: dsnToString(dsn) }),\n  };\n\n  const envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session.toJSON()];\n\n  return createEnvelope(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjut a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem = [{ type: eventType }, event];\n  return createEnvelope(envelopeHeaders, [eventItem]);\n}\n\nexport { createEventEnvelope, createSessionEnvelope };\n//# sourceMappingURL=envelope.js.map\n","import { arrayify, logger } from '@sentry/utils';\nimport { addGlobalEventProcessor } from './eventProcessors.js';\nimport { getCurrentHub } from './hub.js';\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(client, integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/** Setup a single integration.  */\nfunction setupIntegration(client, integration, integrationIndex) {\n  integrationIndex[integration.name] = integration;\n\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n  }\n\n  if (client.on && typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) ;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (client.addEventProcessor && typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) ;\n\n    const processor = Object.assign((event, hint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Integration installed: ${integration.name}`);\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex(arr, callback) {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nexport { getIntegrationsToSetup, installedIntegrations, setupIntegration, setupIntegrations };\n//# sourceMappingURL=integration.js.map\n","import { uuid4, dateTimestampInSeconds, resolvedSyncPromise, truncate, GLOBAL_OBJ, normalize } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from '../constants.js';\nimport { notifyEventProcessors, getGlobalEventProcessors } from '../eventProcessors.js';\nimport { Scope } from '../scope.js';\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nfunction prepareEvent(\n  options,\n  event,\n  hint,\n  scope,\n  client,\n) {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = options;\n  const prepared = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  let finalScope = scope;\n  if (hint.captureContext) {\n    finalScope = Scope.clone(finalScope).update(hint.captureContext);\n  }\n\n  // We prepare the result here with a resolved Event.\n  let result = resolvedSyncPromise(prepared);\n\n  const clientEventProcessors = client && client.getEventProcessors ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  //\n  // We need to check for the existence of `finalScope.getAttachments`\n  // because `getAttachments` can be undefined if users are using an older version\n  // of `@sentry/core` that does not have the `getAttachments` method.\n  // See: https://github.com/getsentry/sentry-javascript/issues/5229\n  if (finalScope) {\n    // Collect attachments from the hint and scope\n    if (finalScope.getAttachments) {\n      const attachments = [...(hint.attachments || []), ...finalScope.getAttachments()];\n\n      if (attachments.length) {\n        hint.attachments = attachments;\n      }\n    }\n\n    // In case we have a hub we reassign it.\n    result = finalScope.applyToEvent(prepared, hint, clientEventProcessors);\n  } else {\n    // Apply client & global event processors even if there is no scope\n    // TODO (v8): Update the order to be Global > Client\n    result = notifyEventProcessors([...clientEventProcessors, ...getGlobalEventProcessors()], prepared, hint);\n  }\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event, options) {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nfunction applyDebugIds(event, stackParser) {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce((acc, debugIdStackTrace) => {\n    let parsedStack;\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nfunction applyDebugMeta(event) {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event, integrationNames) {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event, depth, maxBreadth) {\n  if (!event) {\n    return null;\n  }\n\n  const normalized = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      // We cannot use the spread operator here because `toJSON` on `span` is non-enumerable\n      if (span.data) {\n        span.data = normalize(span.data, depth, maxBreadth);\n      }\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\nexport { applyDebugIds, applyDebugMeta, prepareEvent };\n//# sourceMappingURL=prepareEvent.js.map\n","import { makeDsn, logger, checkOrSetAlreadyCaught, isPrimitive, resolvedSyncPromise, addItemToEnvelope, createAttachmentEnvelopeItem, SyncPromise, rejectedSyncPromise, SentryError, isThenable, isPlainObject } from '@sentry/utils';\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api.js';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope.js';\nimport { setupIntegrations, setupIntegration } from './integration.js';\nimport { updateSession } from './session.js';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext.js';\nimport { prepareEvent } from './utils/prepareEvent.js';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n\n  /** Indicates whether this client's integrations have been set up. */\n\n  /** Number of calls being processed */\n\n  /** Holds flushable  */\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {\n    this._options = options;\n    this._integrations = {};\n    this._integrationsInitialized = false;\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('No DSN provided, client will not do anything.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(String(message), level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!this._isEnabled()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('SDK not enabled, will not capture session.');\n      return;\n    }\n\n    if (!(typeof session.release === 'string')) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n   getSdkMetadata() {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    const transport = this._transport;\n    if (transport) {\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n   getEventProcessors() {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n   addEventProcessor(eventProcessor) {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * Sets up the integrations\n   */\n   setupIntegrations() {\n    if (this._isEnabled() && !this._integrationsInitialized) {\n      this._integrations = setupIntegrations(this, this._options.integrations);\n      this._integrationsInitialized = true;\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   */\n   getIntegrationById(integrationId) {\n    return this._integrations[integrationId];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addIntegration(integration) {\n    setupIntegration(this, integration, this._integrations);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    this.emit('beforeSendEvent', event, hint);\n\n    if (this._dsn) {\n      let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n      for (const attachment of hint.attachments || []) {\n        env = addItemToEnvelope(\n          env,\n          createAttachmentEnvelopeItem(\n            attachment,\n            this._options.transportOptions && this._options.transportOptions.textEncoder,\n          ),\n        );\n      }\n\n      const promise = this._sendEnvelope(env);\n      if (promise) {\n        promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    if (this._dsn) {\n      const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n      void this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category, _event) {\n    // Note: we use `event` in replay, where we overwrite this hook.\n\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   on(hook, callback) {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-expect-error We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   emit(hook, ...rest) {\n    if (this._hooks[hook]) {\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new SyncPromise(resolve => {\n      let ticked = 0;\n      const tick = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    return prepareEvent(options, event, hint, scope, this).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      // If a trace context is not set on the event, we use the propagationContext set on the event to\n      // generate a trace context. If the propagationContext does not have a dynamic sampling context, we\n      // also generate one for it.\n      const { propagationContext } = evt.sdkProcessingMetadata || {};\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext ;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : getDynamicSamplingContextFromClient(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason ;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    if (!this._isEnabled()) {\n      return rejectedSyncPromise(new SentryError('SDK not enabled, will not capture event.', 'log'));\n    }\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    return this._prepareEvent(event, hint, scope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    if (this._transport && this._dsn) {\n      this.emit('beforeEnvelope', envelope);\n\n      return this._transport.send(envelope).then(null, reason => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult,\n  beforeSendLabel,\n) {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options,\n  event,\n  hint,\n) {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event) {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map\n","import { logger } from '@sentry/utils';\nimport { getCurrentHub } from './hub.js';\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      // eslint-disable-next-line no-console\n      console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n    }\n  }\n  const hub = getCurrentHub();\n  const scope = hub.getScope();\n  scope.update(options.initialScope);\n\n  const client = new clientClass(options);\n  hub.bindClient(client);\n}\n\nexport { initAndBind };\n//# sourceMappingURL=sdk.js.map\n","import { makePromiseBuffer, forEachEnvelopeItem, envelopeItemTypeToDataCategory, isRateLimited, resolvedSyncPromise, createEnvelope, SentryError, logger, serializeEnvelope, updateRateLimits } from '@sentry/utils';\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n) {\n  let rateLimits = {};\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const envelopeItemDataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, envelopeItemDataCategory)) {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope = createEnvelope(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item, type) {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item )[1] : undefined;\n}\n\nexport { DEFAULT_TRANSPORT_BUFFER_SIZE, createTransport };\n//# sourceMappingURL=base.js.map\n","const SDK_VERSION = '7.71.0';\n\nexport { SDK_VERSION };\n//# sourceMappingURL=version.js.map\n","import { getOriginalFunction } from '@sentry/utils';\n\nlet originalFunctionToString;\n\n/** Patch toString calls to return proper name for wrapped functions */\nclass FunctionToString  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'FunctionToString';}\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor() {\n    this.name = FunctionToString.id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalFunctionToString = Function.prototype.toString;\n\n    // intrinsics (like Function.prototype) might be immutable in some environments\n    // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      Function.prototype.toString = function ( ...args) {\n        const context = getOriginalFunction(this) || this;\n        return originalFunctionToString.apply(context, args);\n      };\n    } catch (e) {\n      // ignore errors here, just don't patch this\n    }\n  }\n} FunctionToString.__initStatic();\n\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map\n","import { logger, getEventDescription, stringMatchesSomePattern } from '@sentry/utils';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*healthcheck.*$/,\n  /^.*healthy.*$/,\n  /^.*live.*$/,\n  /^.*ready.*$/,\n  /^.*heartbeat.*$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\n\n/** Inbound filters configurable by the user */\nclass InboundFilters  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'InboundFilters';}\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor(options = {}) {\n    this.name = InboundFilters.id;\n    this._options = options;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    const eventProcess = (event) => {\n      const hub = getCurrentHub();\n      if (hub) {\n        const self = hub.getIntegration(InboundFilters);\n        if (self) {\n          const client = hub.getClient();\n          const clientOptions = client ? client.getOptions() : {};\n          const options = _mergeOptions(self._options, clientOptions);\n          return _shouldDropEvent(event, options) ? null : event;\n        }\n      }\n      return event;\n    };\n\n    eventProcess.id = this.name;\n    addGlobalEventProcessor(eventProcess);\n  }\n} InboundFilters.__initStatic();\n\n/** JSDoc */\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event, ignoreTransactions) {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event) {\n  const possibleMessages = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && possibleMessages.length === 0) {\n    logger.error(`Could not extract message for event ${getEventDescription(event)}`);\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n\nexport { InboundFilters, _mergeOptions, _shouldDropEvent };\n//# sourceMappingURL=inboundfilters.js.map\n","import { withScope, captureException } from '@sentry/core';\nimport { GLOBAL_OBJ, getOriginalFunction, markFunctionWrapped, addNonEnumerableProperty, addExceptionTypeValue, addExceptionMechanism } from '@sentry/utils';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n  before,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function () {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope((scope) => {\n        scope.addEventProcessor((event) => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') ;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\n\nexport { WINDOW, ignoreNextOnError, shouldIgnoreOnError, wrap };\n//# sourceMappingURL=helpers.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addExceptionMechanism, resolvedSyncPromise, isErrorEvent, isDOMError, isDOMException, addExceptionTypeValue, isError, isPlainObject, isEvent, normalizeToSize, extractExceptionKeysForMessage } from '@sentry/utils';\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  const hub = getCurrentHub();\n  const client = hub.getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception ).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex) {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if (isErrorEvent(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception )) {\n    const domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromString(\n  stackParser,\n  input,\n  syntheticException,\n  attachStacktrace,\n) {\n  const event = {\n    message: input,\n  };\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: input, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception,\n  { isUnhandledRejection },\n) {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj) {\n  try {\n    const prototype = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\nexport { eventFromError, eventFromException, eventFromMessage, eventFromPlainObject, eventFromString, eventFromUnknownInput, exceptionFromError, parseStackFrames };\n//# sourceMappingURL=eventbuilder.js.map\n","import { dsnToString, createEnvelope } from '@sentry/utils';\n\n/**\n * Creates an envelope from a user feedback.\n */\nfunction createUserFeedbackEnvelope(\n  feedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }\n\n,\n) {\n  const headers = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback) {\n  const feedbackHeaders = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n\nexport { createUserFeedbackEnvelope };\n//# sourceMappingURL=userfeedback.js.map\n","import { BaseClient, SDK_VERSION } from '@sentry/core';\nimport { getSDKSource, logger, createClientReportEnvelope, dsnToString } from '@sentry/utils';\nimport { eventFromException, eventFromMessage } from './eventbuilder.js';\nimport { WINDOW } from './helpers.js';\nimport { createUserFeedbackEnvelope } from './userfeedback.js';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.browser',\n      packages: [\n        {\n          name: `${sdkSource}:@sentry/browser`,\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    super(options);\n\n    if (options.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level = 'info',\n    hint,\n  ) {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   */\n   captureUserFeedback(feedback) {\n    if (!this._isEnabled()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n    void this._sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No outcomes to send');\n      return;\n    }\n\n    if (!this._dsn) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n    void this._sendEnvelope(envelope);\n  }\n}\n\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map\n","import { isNativeFetch, logger } from '@sentry/utils';\nimport { WINDOW } from '../helpers.js';\n\nlet cachedFetchImpl = undefined;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction getNativeFetchImplementation() {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(WINDOW.fetch)) {\n    return (cachedFetchImpl = WINDOW.fetch.bind(WINDOW));\n  }\n\n  const document = WINDOW.document;\n  let fetchImpl = WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nfunction clearCachedFetchImplementation() {\n  cachedFetchImpl = undefined;\n}\n\nexport { clearCachedFetchImplementation, getNativeFetchImplementation };\n//# sourceMappingURL=utils.js.map\n","import { createTransport } from '@sentry/core';\nimport { rejectedSyncPromise } from '@sentry/utils';\nimport { getNativeFetchImplementation, clearCachedFetchImplementation } from './utils.js';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = getNativeFetchImplementation(),\n) {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request) {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedFetchImplementation();\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeFetchTransport };\n//# sourceMappingURL=fetch.js.map\n","import { createTransport } from '@sentry/core';\nimport { SyncPromise } from '@sentry/utils';\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nconst XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nfunction makeXHRTransport(options) {\n  function makeRequest(request) {\n    return new SyncPromise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (const header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return createTransport(options, makeRequest);\n}\n\nexport { makeXHRTransport };\n//# sourceMappingURL=xhr.js.map\n","import { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  const frame = {\n    filename,\n    function: func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nconst chrome = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nconst chromeStackLineParser = [CHROME_PRIORITY, chrome];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nconst geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nconst winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10 = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nconst opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11 = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nconst opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nconst defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nconst defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func, filename) => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\nexport { chromeStackLineParser, defaultStackLineParsers, defaultStackParser, geckoStackLineParser, opera10StackLineParser, opera11StackLineParser, winjsStackLineParser };\n//# sourceMappingURL=stack-parsers.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, isString, isPrimitive, isErrorEvent, getLocationHref, logger, addExceptionMechanism } from '@sentry/utils';\nimport { eventFromUnknownInput } from '../eventbuilder.js';\nimport { shouldIgnoreOnError } from '../helpers.js';\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/** Global handlers */\nclass GlobalHandlers  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'GlobalHandlers';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /** JSDoc */\n\n  /**\n   * Stores references functions to installing handlers. Will set to undefined\n   * after they have been run so that they are not used twice.\n   */\n\n  /** JSDoc */\n   constructor(options) {\n    this.name = GlobalHandlers.id;\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n\n    this._installFunc = {\n      onerror: _installGlobalOnErrorHandler,\n      onunhandledrejection: _installGlobalOnUnhandledRejectionHandler,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    Error.stackTraceLimit = 50;\n    const options = this._options;\n\n    // We can disable guard-for-in as we construct the options object above + do checks against\n    // `this._installFunc` for the property.\n    // eslint-disable-next-line guard-for-in\n    for (const key in options) {\n      const installFunc = this._installFunc[key ];\n      if (installFunc && options[key ]) {\n        globalHandlerLog(key);\n        installFunc();\n        this._installFunc[key ] = undefined;\n      }\n    }\n  }\n} GlobalHandlers.__initStatic();\n\n/** JSDoc */\nfunction _installGlobalOnErrorHandler() {\n  addInstrumentationHandler(\n    'error',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (data) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      const { msg, url, line, column, error } = data;\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return;\n      }\n\n      const event =\n        error === undefined && isString(msg)\n          ? _eventFromIncompleteOnError(msg, url, line, column)\n          : _enhanceEventWithInitialFrame(\n              eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n              url,\n              line,\n              column,\n            );\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onerror');\n    },\n  );\n}\n\n/** JSDoc */\nfunction _installGlobalOnUnhandledRejectionHandler() {\n  addInstrumentationHandler(\n    'unhandledrejection',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (e) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      let error = e;\n\n      // dig the object of the rejection out of known event types\n      try {\n        // PromiseRejectionEvents store the object of the rejection under 'reason'\n        // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n        if ('reason' in e) {\n          error = e.reason;\n        }\n        // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n        // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n        // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n        // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n        // https://github.com/getsentry/sentry-javascript/issues/2380\n        else if ('detail' in e && 'reason' in e.detail) {\n          error = e.detail.reason;\n        }\n      } catch (_oO) {\n        // no-empty\n      }\n\n      if (shouldIgnoreOnError() || (error && error.__sentry_own_request__)) {\n        return true;\n      }\n\n      const event = isPrimitive(error)\n        ? _eventFromRejectionWithPrimitive(error)\n        : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onunhandledrejection');\n      return;\n    },\n  );\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg, url, line, column) {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event, url, line, column) {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction addMechanismAndCapture(hub, error, event, type) {\n  addExceptionMechanism(event, {\n    handled: false,\n    type,\n  });\n  hub.captureEvent(event, {\n    originalException: error,\n  });\n}\n\nfunction getHubAndOptions() {\n  const hub = getCurrentHub();\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return [hub, options.stackParser, options.attachStacktrace];\n}\n\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map\n","import { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\nimport { WINDOW, wrap } from '../helpers.js';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nclass TryCatch  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'TryCatch';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /** JSDoc */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {\n    this.name = TryCatch.id;\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n   setupOnce() {\n    if (this._options.setTimeout) {\n      fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n    }\n\n    if (this._options.setInterval) {\n      fill(WINDOW, 'setInterval', _wrapTimeFunction);\n    }\n\n    if (this._options.requestAnimationFrame) {\n      fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n    }\n\n    if (this._options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n      fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n    }\n\n    const eventTargetOption = this._options.eventTarget;\n    if (eventTargetOption) {\n      const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(_wrapEventTarget);\n    }\n  }\n} TryCatch.__initStatic();\n\n/** JSDoc */\nfunction _wrapTimeFunction(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( callback) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\n/** JSDoc */\nfunction _wrapXHR(originalSend) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original) {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapEventTarget(target) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW ;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original)\n\n {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      eventName,\n      fn,\n      options,\n    ) {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn , {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        eventName,\n        fn,\n        options,\n      ) {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn ;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n\nexport { TryCatch };\n//# sourceMappingURL=trycatch.js.map\n","import { getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, getEventDescription, severityLevelFromString, safeJoin, SENTRY_XHR_DATA_KEY, parseUrl, logger, htmlTreeAsString } from '@sentry/utils';\nimport { WINDOW } from '../helpers.js';\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nclass Breadcrumbs  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Breadcrumbs';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Options of the breadcrumbs integration.\n   */\n  // This field is public, because we use it in the browser client to check if the `sentry` option is enabled.\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {\n    this.name = Breadcrumbs.id;\n    this.options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n   setupOnce() {\n    if (this.options.console) {\n      addInstrumentationHandler('console', _consoleBreadcrumb);\n    }\n    if (this.options.dom) {\n      addInstrumentationHandler('dom', _domBreadcrumb(this.options.dom));\n    }\n    if (this.options.xhr) {\n      addInstrumentationHandler('xhr', _xhrBreadcrumb);\n    }\n    if (this.options.fetch) {\n      addInstrumentationHandler('fetch', _fetchBreadcrumb);\n    }\n    if (this.options.history) {\n      addInstrumentationHandler('history', _historyBreadcrumb);\n    }\n    if (this.options.sentry) {\n      const client = getCurrentHub().getClient();\n      client && client.on && client.on('beforeSendEvent', addSentryBreadcrumb);\n    }\n  }\n} Breadcrumbs.__initStatic();\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction addSentryBreadcrumb(event) {\n  getCurrentHub().addBreadcrumb(\n    {\n      category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n      event_id: event.event_id,\n      level: event.level,\n      message: getEventDescription(event),\n    },\n    {\n      event,\n    },\n  );\n}\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _domBreadcrumb(dom) {\n  function _innerDomBreadcrumb(handlerData) {\n    let target;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event ;\n      target = _isEvent(event)\n        ? htmlTreeAsString(event.target, { keyAttrs, maxStringLength })\n        : htmlTreeAsString(event, { keyAttrs, maxStringLength });\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n        global: handlerData.global,\n      },\n    );\n  }\n\n  return _innerDomBreadcrumb;\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _consoleBreadcrumb(handlerData) {\n  const breadcrumb = {\n    category: 'console',\n    data: {\n      arguments: handlerData.args,\n      logger: 'console',\n    },\n    level: severityLevelFromString(handlerData.level),\n    message: safeJoin(handlerData.args, ' '),\n  };\n\n  if (handlerData.level === 'assert') {\n    if (handlerData.args[0] === false) {\n      breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n      breadcrumb.data.arguments = handlerData.args.slice(1);\n    } else {\n      // Don't capture a breadcrumb for passed assertions\n      return;\n    }\n  }\n\n  getCurrentHub().addBreadcrumb(breadcrumb, {\n    input: handlerData.args,\n    level: handlerData.level,\n  });\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _xhrBreadcrumb(handlerData) {\n  const { startTimestamp, endTimestamp } = handlerData;\n\n  const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n  // We only capture complete, non-sentry requests\n  if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n    return;\n  }\n\n  const { method, url, status_code, body } = sentryXhrData;\n\n  const data = {\n    method,\n    url,\n    status_code,\n  };\n\n  const hint = {\n    xhr: handlerData.xhr,\n    input: body,\n    startTimestamp,\n    endTimestamp,\n  };\n\n  getCurrentHub().addBreadcrumb(\n    {\n      category: 'xhr',\n      data,\n      type: 'http',\n    },\n    hint,\n  );\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _fetchBreadcrumb(handlerData) {\n  const { startTimestamp, endTimestamp } = handlerData;\n\n  // We only capture complete fetch requests\n  if (!endTimestamp) {\n    return;\n  }\n\n  if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n    // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n    return;\n  }\n\n  if (handlerData.error) {\n    const data = handlerData.fetchData;\n    const hint = {\n      data: handlerData.error,\n      input: handlerData.args,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data,\n        level: 'error',\n        type: 'http',\n      },\n      hint,\n    );\n  } else {\n    const data = {\n      ...handlerData.fetchData,\n      status_code: handlerData.response && handlerData.response.status,\n    };\n    const hint = {\n      input: handlerData.args,\n      response: handlerData.response,\n      startTimestamp,\n      endTimestamp,\n    };\n    getCurrentHub().addBreadcrumb(\n      {\n        category: 'fetch',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  }\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _historyBreadcrumb(handlerData) {\n  let from = handlerData.from;\n  let to = handlerData.to;\n  const parsedLoc = parseUrl(WINDOW.location.href);\n  let parsedFrom = parseUrl(from);\n  const parsedTo = parseUrl(to);\n\n  // Initial pushState doesn't provide `from` information\n  if (!parsedFrom.path) {\n    parsedFrom = parsedLoc;\n  }\n\n  // Use only the path component of the URL if the URL matches the current\n  // document (almost all the time when using pushState)\n  if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n    to = parsedTo.relative;\n  }\n  if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n    from = parsedFrom.relative;\n  }\n\n  getCurrentHub().addBreadcrumb({\n    category: 'navigation',\n    data: {\n      from,\n      to,\n    },\n  });\n}\n\nfunction _isEvent(event) {\n  return !!event && !!(event ).target;\n}\n\nexport { Breadcrumbs };\n//# sourceMappingURL=breadcrumbs.js.map\n","import { applyAggregateErrorsToEvent } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder.js';\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nclass LinkedErrors  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'LinkedErrors';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {\n    this.name = LinkedErrors.id;\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /** @inheritdoc */\n   setupOnce() {\n    // noop\n  }\n\n  /**\n   * @inheritDoc\n   */\n   preprocessEvent(event, hint, client) {\n    const options = client.getOptions();\n\n    applyAggregateErrorsToEvent(\n      exceptionFromError,\n      options.stackParser,\n      options.maxValueLength,\n      this._key,\n      this._limit,\n      event,\n      hint,\n    );\n  }\n} LinkedErrors.__initStatic();\n\nexport { LinkedErrors };\n//# sourceMappingURL=linkederrors.js.map\n","import { WINDOW } from '../helpers.js';\n\n/** HttpContext integration collects information about HTTP request headers */\nclass HttpContext  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'HttpContext';}\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor() {\n    this.name = HttpContext.id;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    // noop\n  }\n\n  /** @inheritDoc */\n   preprocessEvent(event) {\n    // if none of the information we want exists, don't bother\n    if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n      return;\n    }\n\n    // grab as much info as exists and add it to the event\n    const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n    const { referrer } = WINDOW.document || {};\n    const { userAgent } = WINDOW.navigator || {};\n\n    const headers = {\n      ...(event.request && event.request.headers),\n      ...(referrer && { Referer: referrer }),\n      ...(userAgent && { 'User-Agent': userAgent }),\n    };\n    const request = { ...event.request, ...(url && { url }), headers };\n\n    event.request = request;\n  }\n} HttpContext.__initStatic();\n\nexport { HttpContext };\n//# sourceMappingURL=httpcontext.js.map\n","import { logger } from '@sentry/utils';\n\n/** Deduplication filter */\nclass Dedupe  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Dedupe';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n   constructor() {\n    this.name = Dedupe.id;\n  }\n\n  /** @inheritDoc */\n   setupOnce(_addGlobaleventProcessor, _getCurrentHub) {\n    // noop\n  }\n\n  /**\n   * @inheritDoc\n   */\n   processEvent(currentEvent) {\n    // We want to ignore any non-error type events, e.g. transactions or replays\n    // These should never be deduped, and also not be compared against as _previousEvent.\n    if (currentEvent.type) {\n      return currentEvent;\n    }\n\n    // Juuust in case something goes wrong\n    try {\n      if (_shouldDropEvent(currentEvent, this._previousEvent)) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n        return null;\n      }\n    } catch (_oO) {} // eslint-disable-line no-empty\n\n    return (this._previousEvent = currentEvent);\n  }\n} Dedupe.__initStatic();\n\n/** JSDoc */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\n/** JSDoc */\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\n/** JSDoc */\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\n/** JSDoc */\nfunction _getFramesFromEvent(event) {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-expect-error Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\nexport { Dedupe };\n//# sourceMappingURL=dedupe.js.map\n","import { Integrations, getIntegrationsToSetup, initAndBind, getReportDialogEndpoint, getCurrentHub } from '@sentry/core';\nimport { stackParserFromStackParserOptions, supportsFetch, logger, addInstrumentationHandler } from '@sentry/utils';\nimport { BrowserClient } from './client.js';\nimport { WINDOW, wrap as wrap$1 } from './helpers.js';\nimport { GlobalHandlers } from './integrations/globalhandlers.js';\nimport { TryCatch } from './integrations/trycatch.js';\nimport { Breadcrumbs } from './integrations/breadcrumbs.js';\nimport { LinkedErrors } from './integrations/linkederrors.js';\nimport { HttpContext } from './integrations/httpcontext.js';\nimport { Dedupe } from './integrations/dedupe.js';\nimport { defaultStackParser } from './stack-parsers.js';\nimport { makeFetchTransport } from './transports/fetch.js';\nimport { makeXHRTransport } from './transports/xhr.js';\n\nconst defaultIntegrations = [\n  new Integrations.InboundFilters(),\n  new Integrations.FunctionToString(),\n  new TryCatch(),\n  new Breadcrumbs(),\n  new GlobalHandlers(),\n  new LinkedErrors(),\n  new Dedupe(),\n  new HttpContext(),\n];\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(options = {}) {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id) {\n      options.release = WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nfunction showReportDialog(options = {}, hub = getCurrentHub()) {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @deprecated This function will be removed in v8.\n * It is not part of Sentry's official API and it's easily replaceable by using a try/catch block\n * and calling Sentry.captureException.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// TODO(v8): Remove this function\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrap(fn) {\n  return wrap$1(fn)();\n}\n\nfunction startSessionOnHub(hub) {\n  hub.startSession({ ignoreDuration: true });\n  hub.captureSession();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n  if (typeof WINDOW.document === 'undefined') {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  const hub = getCurrentHub();\n\n  // The only way for this to be false is for there to be a version mismatch between @sentry/browser (>= 6.0.0) and\n  // @sentry/hub (< 5.27.0). In the simple case, there won't ever be such a mismatch, because the two packages are\n  // pinned at the same version in package.json, but there are edge cases where it's possible. See\n  // https://github.com/getsentry/sentry-javascript/issues/3207 and\n  // https://github.com/getsentry/sentry-javascript/issues/3234 and\n  // https://github.com/getsentry/sentry-javascript/issues/3278.\n  if (!hub.captureSession) {\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSessionOnHub(hub);\n\n  // We want to create a session for every navigation as well\n  addInstrumentationHandler('history', ({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (!(from === undefined || from === to)) {\n      startSessionOnHub(getCurrentHub());\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n */\nfunction captureUserFeedback(feedback) {\n  const client = getCurrentHub().getClient();\n  if (client) {\n    client.captureUserFeedback(feedback);\n  }\n}\n\nexport { captureUserFeedback, defaultIntegrations, forceLoad, init, onLoad, showReportDialog, wrap };\n//# sourceMappingURL=sdk.js.map\n"],"names":["applyAggregateErrorsToEvent","exceptionFromErrorImplementation","parser","maxValueLimit","key","limit","event","hint","isInstanceOf","originalException","truncateAggregateExceptions","aggregateExceptionsFromError","error","prevExceptions","exception","exceptionId","newExceptions","applyExceptionGroupFieldsForParentException","newException","newExceptionId","applyExceptionGroupFieldsForChildException","childError","i","source","parentId","exceptions","maxValueLength","truncate","DSN_REGEX","isValidProtocol","protocol","dsnToString","dsn","withPassword","host","path","pass","port","projectId","publicKey","dsnFromString","str","match","lastPath","split","projectMatch","dsnFromComponents","components","validateDsn","component","logger","makeDsn","from","SentryError","message","logLevel","STACKTRACE_FRAME_LIMIT","WEBPACK_ERROR_REGEXP","STRIP_FRAME_REGEXP","createStackParser","parsers","sortedParsers","a","b","p","stack","skipFirst","frames","lines","line","cleanedLine","frame","stripSentryFramesAndReverse","stackParserFromStackParserOptions","stackParser","localStack","defaultFunctionName","getFunctionName","fn","WINDOW","getGlobalObject","supportsFetch","isNativeFetch","func","supportsNativeFetch","result","doc","sandbox","err","supportsHistory","chrome","isChromePackagedApp","hasHistoryApi","SENTRY_XHR_DATA_KEY","handlers","instrumented","instrument","type","instrumentConsole","instrumentDOM","instrumentXHR","instrumentFetch","instrumentHistory","instrumentError","instrumentUnhandledRejection","addInstrumentationHandler","callback","triggerHandlers","data","handler","e","GLOBAL_OBJ","CONSOLE_LEVELS","level","fill","originalConsoleMethod","originalConsoleMethods","args","log","originalFetch","method","url","parseFetchArgs","handlerData","response","hasProp","obj","prop","getUrlFromResource","resource","fetchArgs","options","arg","xhrproto","originalOpen","xhrInfo","isString","onreadystatechangeHandler","original","readyStateArgs","setRequestHeaderArgs","header","value","originalSend","sentryXhrData","lastHref","oldOnPopState","to","historyReplacementFunction","originalHistoryFunction","debounceDuration","debounceTimerID","lastCapturedEvent","shouldShortcircuitPreviousDebounce","previous","current","shouldSkipDOMEvent","target","makeDOMEventHandler","globalListener","name","triggerDOMHandler","globalDOMEventHandler","proto","originalAddEventListener","listener","el","handlerForType","originalRemoveEventListener","_oldOnErrorHandler","msg","column","_oldOnUnhandledRejectionHandler","memoBuilder","hasWeakSet","inner","memoize","unmemoize","normalize","input","depth","maxProperties","visit","normalizeToSize","object","maxSize","normalized","jsonSize","memo","isNaN","stringified","stringifyValue","remainingDepth","valueWithToJSON","jsonValue","numAdded","visitable","convertToPlainObject","visitKey","visitValue","global","isVueViewModel","isSyntheticEvent","objName","getConstructorName","prototype","utf8Length","makePromiseBuffer","buffer","isReady","remove","task","add","taskProducer","rejectedSyncPromise","drain","timeout","SyncPromise","resolve","reject","counter","capturedSetTimeout","item","resolvedSyncPromise","parseUrl","query","fragment","validSeverityLevels","severityLevelFromString","createEnvelope","headers","items","addItemToEnvelope","envelope","newItem","forEachEnvelopeItem","envelopeItems","envelopeItem","envelopeItemType","encodeUTF8","textEncoder","serializeEnvelope","envHeaders","parts","append","next","itemHeaders","payload","stringifiedPayload","concatBuffers","buffers","totalLength","acc","buf","merged","offset","createAttachmentEnvelopeItem","attachment","dropUndefinedKeys","ITEM_TYPE_TO_DATA_CATEGORY_MAP","envelopeItemTypeToDataCategory","getSdkMetadataForEnvelopeHeader","metadataOrEvent","version","createEventEnvelopeHeaders","sdkInfo","tunnel","dynamicSamplingContext","createClientReportEnvelope","discarded_events","timestamp","clientReportItem","dateTimestampInSeconds","DEFAULT_RETRY_AFTER","parseRetryAfterHeader","now","headerDelay","headerDate","disabledUntil","limits","category","isRateLimited","updateRateLimits","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","retryAfter","categories","delay","getDynamicSamplingContextFromClient","trace_id","client","scope","public_key","user_segment","dsc","DEFAULT_ENVIRONMENT","SENTRY_API_VERSION","getBaseApiEndpoint","_getIngestEndpoint","_encodedAuth","urlEncode","getEnvelopeEndpointWithUrlEncodedAuth","tunnelOrOptions","enhanceEventWithSdkInfo","createSessionEnvelope","session","metadata","envelopeHeaders","createEventEnvelope","eventType","installedIntegrations","filterDuplicates","integrations","integrationsByName","currentInstance","existingInstance","k","getIntegrationsToSetup","defaultIntegrations","userIntegrations","integration","arrayify","finalIntegrations","debugIndex","findIndex","debugInstance","setupIntegrations","integrationIndex","setupIntegration","addGlobalEventProcessor","getCurrentHub","processor","arr","prepareEvent","normalizeDepth","normalizeMaxBreadth","prepared","uuid4","applyClientOptions","applyIntegrationsMetadata","applyDebugIds","finalScope","Scope","clientEventProcessors","attachments","notifyEventProcessors","getGlobalEventProcessors","evt","applyDebugMeta","normalizeEvent","environment","release","dist","request","debugIdStackParserCache","debugIdMap","debugIdStackFramesCache","cachedDebugIdStackFrameCache","filenameDebugIdMap","debugIdStackTrace","parsedStack","cachedParsedStack","stackFrame","images","filename","integrationNames","maxBreadth","span","ALREADY_SEEN_ERROR","BaseClient","checkOrSetAlreadyCaught","eventId","promisedEvent","isPrimitive","updateSession","transport","clientFinished","transportFlushed","eventProcessor","integrationId","env","promise","sendResponse","reason","_event","hook","rest","crashed","errored","ex","mechanism","sessionNonTerminal","ticked","tick","interval","propagationContext","spanId","parentSpanId","finalEvent","sentryError","sampleRate","isTransaction","isTransactionEvent","isError","isErrorEvent","beforeSendLabel","dataCategory","processBeforeSend","_validateBeforeSendResult","processedEvent","transactionInfo","outcomes","beforeSendResult","invalidValueError","isThenable","isPlainObject","beforeSend","beforeSendTransaction","initAndBind","clientClass","hub","DEFAULT_TRANSPORT_BUFFER_SIZE","createTransport","makeRequest","rateLimits","flush","send","filteredEnvelopeItems","envelopeItemDataCategory","getEventForEnvelopeItem","filteredEnvelope","recordEnvelopeLoss","requestTask","SDK_VERSION","originalFunctionToString","FunctionToString","context","getOriginalFunction","DEFAULT_IGNORE_ERRORS","DEFAULT_IGNORE_TRANSACTIONS","InboundFilters","eventProcess","self","clientOptions","_mergeOptions","_shouldDropEvent","internalOptions","_isSentryError","getEventDescription","_isIgnoredError","_isIgnoredTransaction","_isDeniedUrl","_getEventFilterUrl","_isAllowedUrl","ignoreErrors","_getPossibleEventMessages","stringMatchesSomePattern","ignoreTransactions","denyUrls","allowUrls","possibleMessages","lastException","_getLastValidUrl","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","wrap","before","wrapper","sentryWrapped","wrappedArguments","withScope","addExceptionTypeValue","addExceptionMechanism","captureException","property","markFunctionWrapped","addNonEnumerableProperty","exceptionFromError","parseStackFrames","extractMessage","eventFromPlainObject","syntheticException","isUnhandledRejection","isEvent","getNonErrorObjectExceptionValue","eventFromError","stacktrace","popSize","getPopSize","reactMinifiedRegexp","eventFromException","attachStacktrace","eventFromUnknownInput","eventFromMessage","eventFromString","isDOMError","isDOMException","domException","keys","extractExceptionKeysForMessage","captureType","getObjectClassName","createUserFeedbackEnvelope","feedback","createUserFeedbackEnvelopeItem","BrowserClient","sdkSource","getSDKSource","cachedFetchImpl","getNativeFetchImplementation","document","fetchImpl","contentWindow","clearCachedFetchImplementation","makeFetchTransport","nativeFetch","pendingBodySize","pendingCount","requestSize","requestOptions","XHR_READYSTATE_DONE","makeXHRTransport","xhr","UNKNOWN_FUNCTION","CHROME_PRIORITY","WINJS_PRIORITY","GECKO_PRIORITY","createFrame","lineno","colno","chromeRegex","chromeEvalRegex","subMatch","extractSafariExtensionDetails","chromeStackLineParser","geckoREgex","geckoEvalRegex","gecko","geckoStackLineParser","winjsRegex","winjs","winjsStackLineParser","defaultStackLineParsers","defaultStackParser","isSafariExtension","isSafariWebExtension","GlobalHandlers","_installGlobalOnErrorHandler","_installGlobalOnUnhandledRejectionHandler","installFunc","globalHandlerLog","getHubAndOptions","_eventFromIncompleteOnError","_enhanceEventWithInitialFrame","addMechanismAndCapture","_eventFromRejectionWithPrimitive","ERROR_TYPES_RE","groups","ev","ev0","ev0s","ev0sf","getLocationHref","DEFAULT_EVENT_TARGET","TryCatch","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","originalCallback","wrapOptions","originalFunction","globalObject","eventName","wrappedEventHandler","originalEventHandler","MAX_ALLOWED_STRING_LENGTH","Breadcrumbs","_consoleBreadcrumb","_domBreadcrumb","_xhrBreadcrumb","_fetchBreadcrumb","_historyBreadcrumb","addSentryBreadcrumb","dom","_innerDomBreadcrumb","keyAttrs","maxStringLength","_isEvent","htmlTreeAsString","breadcrumb","safeJoin","startTimestamp","endTimestamp","status_code","body","parsedLoc","parsedFrom","parsedTo","DEFAULT_KEY","DEFAULT_LIMIT","LinkedErrors","HttpContext","referrer","userAgent","Dedupe","_addGlobaleventProcessor","_getCurrentHub","currentEvent","previousEvent","_isSameMessageEvent","_isSameExceptionEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","previousException","_getExceptionFromEvent","currentException","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","Integrations.InboundFilters","Integrations.FunctionToString","init","startSessionTracking","startSessionOnHub","captureUserFeedback"],"mappings":"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"}